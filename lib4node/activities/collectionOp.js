"use strict";
var util = require('util');
var Activity = require("../../deps/workflow-4-node").activities.Activity;
var Collection = require('mongodb').Collection;
function CollectionOp() {
  Activity.call(this);
  this.collection = null;
  this.nonScopedProperties.add('getCollection');
  this.nonScopedProperties.add('doWork');
}
util.inherits(CollectionOp, Activity);
CollectionOp.prototype.getCollection = function(scope) {
  var collection = scope.get('collection');
  if (!(collection instanceof Collection))
    throw new Error('MongoDB collection \'' + collection + '\' doesn\'t exists.');
  return collection;
};
CollectionOp.prototype.run = function(callContext, args) {
  callContext.schedule(this.get('collection'), '_collectionGot');
};
CollectionOp.prototype._collectionGot = function(callContext, reason, result) {
  if (reason !== Activity.states.complete) {
    callContext.end(reason, result);
    return ;
  }
  callContext.activity.doWork.call(this, callContext);
};
CollectionOp.prototype.doWork = function(callContext) {
  callContext.fail(new Error("Not implemented."));
};
module.exports = CollectionOp;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbGxlY3Rpb25PcC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBLEFBQUksRUFBQSxDQUFBLElBQUcsRUFBSSxDQUFBLE9BQU0sQUFBQyxDQUFDLE1BQUssQ0FBQyxDQUFDO0FBQzFCLEFBQUksRUFBQSxDQUFBLFFBQU8sRUFBSSxDQUFBLE9BQU0sQUFBQyxDQUFDLDRCQUEyQixDQUFDLFdBQVcsU0FBUyxDQUFDO0FBQ3hFLEFBQUksRUFBQSxDQUFBLFVBQVMsRUFBSSxDQUFBLE9BQU0sQUFBQyxDQUFDLFNBQVEsQ0FBQyxXQUFXLENBQUM7QUFFOUMsT0FBUyxhQUFXLENBQUUsQUFBRCxDQUFHO0FBQ3BCLFNBQU8sS0FBSyxBQUFDLENBQUMsSUFBRyxDQUFDLENBQUM7QUFFbkIsS0FBRyxXQUFXLEVBQUksS0FBRyxDQUFDO0FBQ3RCLEtBQUcsb0JBQW9CLElBQUksQUFBQyxDQUFDLGVBQWMsQ0FBQyxDQUFDO0FBQzdDLEtBQUcsb0JBQW9CLElBQUksQUFBQyxDQUFDLFFBQU8sQ0FBQyxDQUFDO0FBQzFDO0FBQUEsQUFFQSxHQUFHLFNBQVMsQUFBQyxDQUFDLFlBQVcsQ0FBRyxTQUFPLENBQUMsQ0FBQztBQUVyQyxXQUFXLFVBQVUsY0FBYyxFQUFJLFVBQVMsS0FBSSxDQUFHO0FBQ25ELEFBQUksSUFBQSxDQUFBLFVBQVMsRUFBSSxDQUFBLEtBQUksSUFBSSxBQUFDLENBQUMsWUFBVyxDQUFDLENBQUM7QUFDeEMsS0FBSSxDQUFDLENBQUMsVUFBUyxXQUFhLFdBQVMsQ0FBQztBQUFHLFFBQU0sSUFBSSxNQUFJLEFBQUMsQ0FBQyx1QkFBc0IsRUFBSSxXQUFTLENBQUEsQ0FBSSxzQkFBb0IsQ0FBQyxDQUFDO0FBQUEsQUFDdEgsT0FBTyxXQUFTLENBQUM7QUFDckIsQ0FBQztBQUVELFdBQVcsVUFBVSxJQUFJLEVBQUksVUFBUyxXQUFVLENBQUcsQ0FBQSxJQUFHLENBQUc7QUFDckQsWUFBVSxTQUFTLEFBQUMsQ0FBQyxJQUFHLElBQUksQUFBQyxDQUFDLFlBQVcsQ0FBQyxDQUFHLGlCQUFlLENBQUMsQ0FBQztBQUNsRSxDQUFBO0FBRUEsV0FBVyxVQUFVLGVBQWUsRUFBSSxVQUFTLFdBQVUsQ0FBRyxDQUFBLE1BQUssQ0FBRyxDQUFBLE1BQUssQ0FBRztBQUMxRSxLQUFJLE1BQUssSUFBTSxDQUFBLFFBQU8sT0FBTyxTQUFTLENBQUc7QUFDckMsY0FBVSxJQUFJLEFBQUMsQ0FBQyxNQUFLLENBQUcsT0FBSyxDQUFDLENBQUM7QUFDL0IsV0FBTTtFQUNWO0FBQUEsQUFFQSxZQUFVLFNBQVMsT0FBTyxLQUFLLEFBQUMsQ0FBQyxJQUFHLENBQUcsWUFBVSxDQUFDLENBQUM7QUFDdkQsQ0FBQTtBQUVBLFdBQVcsVUFBVSxPQUFPLEVBQUksVUFBUyxXQUFVLENBQUU7QUFDakQsWUFBVSxLQUFLLEFBQUMsQ0FBQyxHQUFJLE1BQUksQUFBQyxDQUFDLGtCQUFpQixDQUFDLENBQUMsQ0FBQztBQUNuRCxDQUFBO0FBRUEsS0FBSyxRQUFRLEVBQUksYUFBVyxDQUFDO0FBQUEiLCJmaWxlIjoiYWN0aXZpdGllcy9jb2xsZWN0aW9uT3AuanMiLCJzb3VyY2VSb290IjoiQzovR0lUL21vbmdvLWNydW5jaC9saWIvIiwic291cmNlc0NvbnRlbnQiOlsidmFyIHV0aWwgPSByZXF1aXJlKCd1dGlsJyk7XHJcbnZhciBBY3Rpdml0eSA9IHJlcXVpcmUoXCIuLi8uLi9kZXBzL3dvcmtmbG93LTQtbm9kZVwiKS5hY3Rpdml0aWVzLkFjdGl2aXR5O1xyXG52YXIgQ29sbGVjdGlvbiA9IHJlcXVpcmUoJ21vbmdvZGInKS5Db2xsZWN0aW9uO1xyXG5cclxuZnVuY3Rpb24gQ29sbGVjdGlvbk9wKCkge1xyXG4gICAgQWN0aXZpdHkuY2FsbCh0aGlzKTtcclxuXHJcbiAgICB0aGlzLmNvbGxlY3Rpb24gPSBudWxsO1xyXG4gICAgdGhpcy5ub25TY29wZWRQcm9wZXJ0aWVzLmFkZCgnZ2V0Q29sbGVjdGlvbicpO1xyXG4gICAgdGhpcy5ub25TY29wZWRQcm9wZXJ0aWVzLmFkZCgnZG9Xb3JrJyk7XHJcbn1cclxuXHJcbnV0aWwuaW5oZXJpdHMoQ29sbGVjdGlvbk9wLCBBY3Rpdml0eSk7XHJcblxyXG5Db2xsZWN0aW9uT3AucHJvdG90eXBlLmdldENvbGxlY3Rpb24gPSBmdW5jdGlvbihzY29wZSkge1xyXG4gICAgdmFyIGNvbGxlY3Rpb24gPSBzY29wZS5nZXQoJ2NvbGxlY3Rpb24nKTtcclxuICAgIGlmICghKGNvbGxlY3Rpb24gaW5zdGFuY2VvZiBDb2xsZWN0aW9uKSkgdGhyb3cgbmV3IEVycm9yKCdNb25nb0RCIGNvbGxlY3Rpb24gXFwnJyArIGNvbGxlY3Rpb24gKyAnXFwnIGRvZXNuXFwndCBleGlzdHMuJyk7XHJcbiAgICByZXR1cm4gY29sbGVjdGlvbjtcclxufTtcclxuXHJcbkNvbGxlY3Rpb25PcC5wcm90b3R5cGUucnVuID0gZnVuY3Rpb24oY2FsbENvbnRleHQsIGFyZ3MpIHtcclxuICAgIGNhbGxDb250ZXh0LnNjaGVkdWxlKHRoaXMuZ2V0KCdjb2xsZWN0aW9uJyksICdfY29sbGVjdGlvbkdvdCcpO1xyXG59XHJcblxyXG5Db2xsZWN0aW9uT3AucHJvdG90eXBlLl9jb2xsZWN0aW9uR290ID0gZnVuY3Rpb24oY2FsbENvbnRleHQsIHJlYXNvbiwgcmVzdWx0KSB7XHJcbiAgICBpZiAocmVhc29uICE9PSBBY3Rpdml0eS5zdGF0ZXMuY29tcGxldGUpIHtcclxuICAgICAgICBjYWxsQ29udGV4dC5lbmQocmVhc29uLCByZXN1bHQpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBjYWxsQ29udGV4dC5hY3Rpdml0eS5kb1dvcmsuY2FsbCh0aGlzLCBjYWxsQ29udGV4dCk7XHJcbn1cclxuXHJcbkNvbGxlY3Rpb25PcC5wcm90b3R5cGUuZG9Xb3JrID0gZnVuY3Rpb24oY2FsbENvbnRleHQpe1xyXG4gICAgY2FsbENvbnRleHQuZmFpbChuZXcgRXJyb3IoXCJOb3QgaW1wbGVtZW50ZWQuXCIpKTtcclxufVxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBDb2xsZWN0aW9uT3A7Il19
