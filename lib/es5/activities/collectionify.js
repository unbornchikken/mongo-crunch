"use strict";
"use strict";
var wf4node = require("workflow-4-node");
var util = require("util");
var Composite = wf4node.activities.Composite;
var path = require("path");
var Collection = require("mongodb").Collection;
var config = require("../config");
function Collectionify() {
  Composite.call(this);
  this.input = null;
  this.name = null;
  this.connection = "";
  this.indexes = null;
  this.ttl = config.defaultTTL;
}
util.inherits(Collectionify, Composite);
Collectionify.prototype.createImplementation = function() {
  return {
    "@require": __dirname,
    "@block": {
      collectionifyRoot: "= this.$parent",
      args: [{"@if": {
          condition: {"@func": {
              args: ["= this.collectionifyRoot.input"],
              code: function(input) {
                return input instanceof Collection;
              }
            }},
          then: "= this.collectionifyRoot.input",
          else: {"@block": {
              tmp: {"@tempCollectionRef": {
                  name: "= this.collectionifyRoot.name ? this.collectionifyRoot : 'collectionified'",
                  connection: "= this.collectionifyRoot.connection",
                  indexes: "= this.collectionifyRoot.indexes",
                  ttl: "= this.collectionifyRoot.ttl"
                }},
              args: [{"@insert": {
                  collection: "= this.tmp",
                  documents: "= this.collectionifyRoot.input"
                }}, "= this.tmp"]
            }}
        }}]
    }
  };
};
module.exports = Collectionify;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbGxlY3Rpb25pZnkuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQSxXQUFXLENBQUM7QUFFWixBQUFJLEVBQUEsQ0FBQSxPQUFNLEVBQUksQ0FBQSxPQUFNLEFBQUMsQ0FBQyxpQkFBZ0IsQ0FBQyxDQUFDO0FBQ3hDLEFBQUksRUFBQSxDQUFBLElBQUcsRUFBSSxDQUFBLE9BQU0sQUFBQyxDQUFDLE1BQUssQ0FBQyxDQUFDO0FBQzFCLEFBQUksRUFBQSxDQUFBLFNBQVEsRUFBSSxDQUFBLE9BQU0sV0FBVyxVQUFVLENBQUM7QUFDNUMsQUFBSSxFQUFBLENBQUEsSUFBRyxFQUFJLENBQUEsT0FBTSxBQUFDLENBQUMsTUFBSyxDQUFDLENBQUM7QUFDMUIsQUFBSSxFQUFBLENBQUEsVUFBUyxFQUFJLENBQUEsT0FBTSxBQUFDLENBQUMsU0FBUSxDQUFDLFdBQVcsQ0FBQztBQUM5QyxBQUFJLEVBQUEsQ0FBQSxNQUFLLEVBQUksQ0FBQSxPQUFNLEFBQUMsQ0FBQyxXQUFVLENBQUMsQ0FBQztBQUVqQyxPQUFTLGNBQVksQ0FBRSxBQUFELENBQUc7QUFDckIsVUFBUSxLQUFLLEFBQUMsQ0FBQyxJQUFHLENBQUMsQ0FBQztBQUVwQixLQUFHLE1BQU0sRUFBSSxLQUFHLENBQUM7QUFDakIsS0FBRyxLQUFLLEVBQUksS0FBRyxDQUFDO0FBQ2hCLEtBQUcsV0FBVyxFQUFJLEdBQUMsQ0FBQztBQUNwQixLQUFHLFFBQVEsRUFBSSxLQUFHLENBQUM7QUFDbkIsS0FBRyxJQUFJLEVBQUksQ0FBQSxNQUFLLFdBQVcsQ0FBQztBQUNoQztBQUFBLEFBRUEsR0FBRyxTQUFTLEFBQUMsQ0FBQyxhQUFZLENBQUcsVUFBUSxDQUFDLENBQUM7QUFFdkMsWUFBWSxVQUFVLHFCQUFxQixFQUFJLFVBQVUsQUFBRCxDQUFHO0FBQ3ZELE9BQU87QUFDSCxhQUFTLENBQUcsVUFBUTtBQUNwQixXQUFPLENBQUc7QUFDTixzQkFBZ0IsQ0FBRyxpQkFBZTtBQUNsQyxTQUFHLENBQUcsRUFDRixDQUNJLEtBQUksQ0FBRztBQUNILGtCQUFRLENBQUcsRUFDUCxPQUFNLENBQUc7QUFDTCxpQkFBRyxDQUFHLEVBQUMsZ0NBQStCLENBQUM7QUFDdkMsaUJBQUcsQ0FBRyxVQUFVLEtBQUksQ0FBRztBQUNuQixxQkFBTyxDQUFBLEtBQUksV0FBYSxXQUFTLENBQUM7Y0FDdEM7QUFBQSxZQUNKLENBQ0o7QUFDQSxhQUFHLENBQUcsaUNBQStCO0FBQ3JDLGFBQUcsQ0FBRyxFQUNGLFFBQU8sQ0FBRztBQUNOLGdCQUFFLENBQUcsRUFDRCxvQkFBbUIsQ0FBRztBQUNsQixxQkFBRyxDQUFHLDZFQUEyRTtBQUNqRiwyQkFBUyxDQUFHLHNDQUFvQztBQUNoRCx3QkFBTSxDQUFHLG1DQUFpQztBQUMxQyxvQkFBRSxDQUFHLCtCQUE2QjtBQUFBLGdCQUN0QyxDQUNKO0FBQ0EsaUJBQUcsQ0FBRyxFQUNGLENBQ0ksU0FBUSxDQUFHO0FBQ1AsMkJBQVMsQ0FBRyxhQUFXO0FBQ3ZCLDBCQUFRLENBQUcsaUNBQStCO0FBQUEsZ0JBQzlDLENBQ0osQ0FDQSxhQUFXLENBQ2Y7QUFBQSxZQUNKLENBQ0o7QUFBQSxRQUNKLENBQ0osQ0FDSjtBQUFBLElBQ0o7QUFBQSxFQUNKLENBQUM7QUFDTCxDQUFDO0FBRUQsS0FBSyxRQUFRLEVBQUksY0FBWSxDQUFDO0FBQUEiLCJmaWxlIjoiYWN0aXZpdGllcy9jb2xsZWN0aW9uaWZ5LmpzIiwic291cmNlUm9vdCI6ImxpYi9lczYiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcclxuXHJcbmxldCB3ZjRub2RlID0gcmVxdWlyZShcIndvcmtmbG93LTQtbm9kZVwiKTtcclxubGV0IHV0aWwgPSByZXF1aXJlKFwidXRpbFwiKTtcclxubGV0IENvbXBvc2l0ZSA9IHdmNG5vZGUuYWN0aXZpdGllcy5Db21wb3NpdGU7XHJcbmxldCBwYXRoID0gcmVxdWlyZShcInBhdGhcIik7XHJcbmxldCBDb2xsZWN0aW9uID0gcmVxdWlyZShcIm1vbmdvZGJcIikuQ29sbGVjdGlvbjtcclxubGV0IGNvbmZpZyA9IHJlcXVpcmUoXCIuLi9jb25maWdcIik7XHJcblxyXG5mdW5jdGlvbiBDb2xsZWN0aW9uaWZ5KCkge1xyXG4gICAgQ29tcG9zaXRlLmNhbGwodGhpcyk7XHJcblxyXG4gICAgdGhpcy5pbnB1dCA9IG51bGw7XHJcbiAgICB0aGlzLm5hbWUgPSBudWxsO1xyXG4gICAgdGhpcy5jb25uZWN0aW9uID0gXCJcIjtcclxuICAgIHRoaXMuaW5kZXhlcyA9IG51bGw7XHJcbiAgICB0aGlzLnR0bCA9IGNvbmZpZy5kZWZhdWx0VFRMO1xyXG59XHJcblxyXG51dGlsLmluaGVyaXRzKENvbGxlY3Rpb25pZnksIENvbXBvc2l0ZSk7XHJcblxyXG5Db2xsZWN0aW9uaWZ5LnByb3RvdHlwZS5jcmVhdGVJbXBsZW1lbnRhdGlvbiA9IGZ1bmN0aW9uICgpIHtcclxuICAgIHJldHVybiB7XHJcbiAgICAgICAgXCJAcmVxdWlyZVwiOiBfX2Rpcm5hbWUsXHJcbiAgICAgICAgXCJAYmxvY2tcIjoge1xyXG4gICAgICAgICAgICBjb2xsZWN0aW9uaWZ5Um9vdDogXCI9IHRoaXMuJHBhcmVudFwiLFxyXG4gICAgICAgICAgICBhcmdzOiBbXHJcbiAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgXCJAaWZcIjoge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBjb25kaXRpb246IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiQGZ1bmNcIjoge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFyZ3M6IFtcIj0gdGhpcy5jb2xsZWN0aW9uaWZ5Um9vdC5pbnB1dFwiXSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb2RlOiBmdW5jdGlvbiAoaW5wdXQpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGlucHV0IGluc3RhbmNlb2YgQ29sbGVjdGlvbjtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoZW46IFwiPSB0aGlzLmNvbGxlY3Rpb25pZnlSb290LmlucHV0XCIsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGVsc2U6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiQGJsb2NrXCI6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0bXA6IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJAdGVtcENvbGxlY3Rpb25SZWZcIjoge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogXCI9IHRoaXMuY29sbGVjdGlvbmlmeVJvb3QubmFtZSA/IHRoaXMuY29sbGVjdGlvbmlmeVJvb3QgOiAnY29sbGVjdGlvbmlmaWVkJ1wiLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29ubmVjdGlvbjogXCI9IHRoaXMuY29sbGVjdGlvbmlmeVJvb3QuY29ubmVjdGlvblwiLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaW5kZXhlczogXCI9IHRoaXMuY29sbGVjdGlvbmlmeVJvb3QuaW5kZXhlc1wiLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHRsOiBcIj0gdGhpcy5jb2xsZWN0aW9uaWZ5Um9vdC50dGxcIlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhcmdzOiBbXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiQGluc2VydFwiOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29sbGVjdGlvbjogXCI9IHRoaXMudG1wXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnRzOiBcIj0gdGhpcy5jb2xsZWN0aW9uaWZ5Um9vdC5pbnB1dFwiXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiPSB0aGlzLnRtcFwiXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBdXHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxufTtcclxuXHJcbm1vZHVsZS5leHBvcnRzID0gQ29sbGVjdGlvbmlmeTsiXX0=
