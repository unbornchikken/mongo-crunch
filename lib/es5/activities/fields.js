"use strict";
var wf4node = require("workflow-4-node");
var util = require("util");
var Activity = wf4node.activities.Activity;
var _ = require("lodash");
function Fields() {
  Activity.call(this);
  this.flag = 1;
}
util.inherits(Fields, Activity);
Fields.prototype.run = function(callContext, args) {
  callContext.schedule(args, "_argsGot");
};
Fields.prototype._argsGot = function(callContext, reason, result) {
  if (reason !== Activity.states.complete) {
    callContext.end(reason, result);
    return;
  }
  var fields = {};
  var flag = this.flag;
  var $__4 = true;
  var $__5 = false;
  var $__6 = undefined;
  try {
    for (var $__2 = void 0,
        $__1 = (result)[Symbol.iterator](); !($__4 = ($__2 = $__1.next()).done); $__4 = true) {
      var key = $__2.value;
      {
        if (_.isString(key)) {
          fields[key] = flag;
        }
      }
    }
  } catch ($__7) {
    $__5 = true;
    $__6 = $__7;
  } finally {
    try {
      if (!$__4 && $__1.return != null) {
        $__1.return();
      }
    } finally {
      if ($__5) {
        throw $__6;
      }
    }
  }
  console.log(fields);
  callContext.complete(fields);
};
module.exports = Fields;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZpZWxkcy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUVBLEFBQUksRUFBQSxDQUFBLE9BQU0sRUFBSSxDQUFBLE9BQU0sQUFBQyxDQUFDLGlCQUFnQixDQUFDLENBQUM7QUFDeEMsQUFBSSxFQUFBLENBQUEsSUFBRyxFQUFJLENBQUEsT0FBTSxBQUFDLENBQUMsTUFBSyxDQUFDLENBQUM7QUFDMUIsQUFBSSxFQUFBLENBQUEsUUFBTyxFQUFJLENBQUEsT0FBTSxXQUFXLFNBQVMsQ0FBQztBQUMxQyxBQUFJLEVBQUEsQ0FBQSxDQUFBLEVBQUksQ0FBQSxPQUFNLEFBQUMsQ0FBQyxRQUFPLENBQUMsQ0FBQztBQUV6QixPQUFTLE9BQUssQ0FBRSxBQUFELENBQUc7QUFDZCxTQUFPLEtBQUssQUFBQyxDQUFDLElBQUcsQ0FBQyxDQUFDO0FBRW5CLEtBQUcsS0FBSyxFQUFJLEVBQUEsQ0FBQztBQUNqQjtBQUFBLEFBRUEsR0FBRyxTQUFTLEFBQUMsQ0FBQyxNQUFLLENBQUcsU0FBTyxDQUFDLENBQUM7QUFFL0IsS0FBSyxVQUFVLElBQUksRUFBSSxVQUFVLFdBQVUsQ0FBRyxDQUFBLElBQUcsQ0FBRztBQUNoRCxZQUFVLFNBQVMsQUFBQyxDQUFDLElBQUcsQ0FBRyxXQUFTLENBQUMsQ0FBQztBQUMxQyxDQUFDO0FBRUQsS0FBSyxVQUFVLFNBQVMsRUFBSSxVQUFVLFdBQVUsQ0FBRyxDQUFBLE1BQUssQ0FBRyxDQUFBLE1BQUs7QUFDNUQsS0FBSSxNQUFLLElBQU0sQ0FBQSxRQUFPLE9BQU8sU0FBUyxDQUFHO0FBQ3JDLGNBQVUsSUFBSSxBQUFDLENBQUMsTUFBSyxDQUFHLE9BQUssQ0FBQyxDQUFDO0FBQy9CLFVBQU07RUFDVjtBQUFBLEFBRUksSUFBQSxDQUFBLE1BQUssRUFBSSxHQUFDLENBQUM7QUFDZixBQUFJLElBQUEsQ0FBQSxJQUFHLEVBQUksQ0FBQSxJQUFHLEtBQUssQ0FBQztBQXpCaEIsQUFBSSxJQUFBLE9BQW9CLEtBQUcsQ0FBQztBQUM1QixBQUFJLElBQUEsT0FBb0IsTUFBSSxDQUFDO0FBQzdCLEFBQUksSUFBQSxPQUFvQixVQUFRLENBQUM7QUFDakMsSUFBSTtBQUhKLFFBQVMsR0FBQSxPQURqQixLQUFLLEVBQUEsQUFDNEI7QUFDaEIsYUFBb0IsQ0FBQSxDQXlCakIsTUFBSyxDQXpCOEIsQ0FBRSxNQUFLLFNBQVMsQ0FBQyxBQUFDLEVBQUMsQ0FDN0QsRUFBQyxDQUFDLE1BQW9CLENBQUEsQ0FBQyxNQUFvQixDQUFBLFNBQXFCLEFBQUMsRUFBQyxDQUFDLEtBQUssQ0FBQyxDQUN6RSxPQUFvQixLQUFHLENBQUc7UUF1QjFCLElBQUU7QUFBYTtBQUNwQixXQUFJLENBQUEsU0FBUyxBQUFDLENBQUMsR0FBRSxDQUFDLENBQUc7QUFDakIsZUFBSyxDQUFFLEdBQUUsQ0FBQyxFQUFJLEtBQUcsQ0FBQztRQUN0QjtBQUFBLE1BQ0o7SUF4Qkk7QUFBQSxFQURBLENBQUUsWUFBMEI7QUFDMUIsU0FBb0IsS0FBRyxDQUFDO0FBQ3hCLGNBQW9DLENBQUM7RUFDdkMsQ0FBRSxPQUFRO0FBQ1IsTUFBSTtBQUNGLFNBQUksS0FBaUIsR0FBSyxDQUFBLFdBQXVCLEdBQUssS0FBRyxDQUFHO0FBQzFELGtCQUF3QixBQUFDLEVBQUMsQ0FBQztNQUM3QjtBQUFBLElBQ0YsQ0FBRSxPQUFRO0FBQ1IsY0FBd0I7QUFDdEIsa0JBQXdCO01BQzFCO0FBQUEsSUFDRjtBQUFBLEVBQ0Y7QUFBQSxBQWFKLFFBQU0sSUFBSSxBQUFDLENBQUMsTUFBSyxDQUFDLENBQUM7QUFDbkIsWUFBVSxTQUFTLEFBQUMsQ0FBQyxNQUFLLENBQUMsQ0FBQztBQUNoQyxDQUFDO0FBRUQsS0FBSyxRQUFRLEVBQUksT0FBSyxDQUFDO0FBQUEiLCJmaWxlIjoiYWN0aXZpdGllcy9maWVsZHMuanMiLCJzb3VyY2VSb290IjoibGliL2VzNiIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xyXG5cclxubGV0IHdmNG5vZGUgPSByZXF1aXJlKFwid29ya2Zsb3ctNC1ub2RlXCIpO1xyXG5sZXQgdXRpbCA9IHJlcXVpcmUoXCJ1dGlsXCIpO1xyXG5sZXQgQWN0aXZpdHkgPSB3ZjRub2RlLmFjdGl2aXRpZXMuQWN0aXZpdHk7XHJcbmxldCBfID0gcmVxdWlyZShcImxvZGFzaFwiKTtcclxuXHJcbmZ1bmN0aW9uIEZpZWxkcygpIHtcclxuICAgIEFjdGl2aXR5LmNhbGwodGhpcyk7XHJcblxyXG4gICAgdGhpcy5mbGFnID0gMTtcclxufVxyXG5cclxudXRpbC5pbmhlcml0cyhGaWVsZHMsIEFjdGl2aXR5KTtcclxuXHJcbkZpZWxkcy5wcm90b3R5cGUucnVuID0gZnVuY3Rpb24gKGNhbGxDb250ZXh0LCBhcmdzKSB7XHJcbiAgICBjYWxsQ29udGV4dC5zY2hlZHVsZShhcmdzLCBcIl9hcmdzR290XCIpO1xyXG59O1xyXG5cclxuRmllbGRzLnByb3RvdHlwZS5fYXJnc0dvdCA9IGZ1bmN0aW9uIChjYWxsQ29udGV4dCwgcmVhc29uLCByZXN1bHQpIHtcclxuICAgIGlmIChyZWFzb24gIT09IEFjdGl2aXR5LnN0YXRlcy5jb21wbGV0ZSkge1xyXG4gICAgICAgIGNhbGxDb250ZXh0LmVuZChyZWFzb24sIHJlc3VsdCk7XHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG5cclxuICAgIGxldCBmaWVsZHMgPSB7fTtcclxuICAgIGxldCBmbGFnID0gdGhpcy5mbGFnO1xyXG4gICAgZm9yIChsZXQga2V5IG9mIHJlc3VsdCkge1xyXG4gICAgICAgIGlmIChfLmlzU3RyaW5nKGtleSkpIHtcclxuICAgICAgICAgICAgZmllbGRzW2tleV0gPSBmbGFnO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIGNvbnNvbGUubG9nKGZpZWxkcyk7XHJcbiAgICBjYWxsQ29udGV4dC5jb21wbGV0ZShmaWVsZHMpO1xyXG59O1xyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBGaWVsZHM7Il19
