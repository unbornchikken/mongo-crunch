"use strict";
var wf4node = require("workflow-4-node");
var util = require("util");
var Activity = wf4node.activities.Activity;
var Collection = require("mongodb").Collection;
var Collectionify = require("./collectionify");
var _ = require("lodash");
function CollectionOp() {
  Activity.call(this);
  this.collection = null;
  this.nonScopedProperties.add("doWork");
}
util.inherits(CollectionOp, Activity);
Object.defineProperties(CollectionOp.prototype, {collectionify: {
    value: false,
    enumerable: false
  }});
CollectionOp.prototype.getCollection = function(mustSet) {
  mustSet = _.isUndefined(mustSet) ? true : !!mustSet;
  var collection = this.collection;
  if (mustSet && !(collection instanceof Collection)) {
    throw new Error(("'" + collection + " is not a Collection instance'"));
  }
  return collection;
};
CollectionOp.prototype.initializeStructure = function() {
  if (this.collectionify) {
    var coll = this.collection;
    this.collection = new Collectionify();
    this.collection.input = coll;
  }
};
CollectionOp.prototype.run = function(callContext, args) {
  this._args = args;
  callContext.schedule(this.collection, "_collectionGot");
};
CollectionOp.prototype._collectionGot = function(callContext, reason, result) {
  if (reason !== Activity.states.complete) {
    callContext.end(reason, result);
    return;
  }
  this.collection = result;
  callContext.activity.doWork.call(this, callContext);
};
CollectionOp.prototype.doWork = function(callContext) {
  callContext.fail(new Error("Not implemented."));
};
module.exports = CollectionOp;
//# sourceMappingURL=data:application/json;base64,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Q0FBQztBQUN2RCxDQUFDO0FBRUQsV0FBVyxVQUFVLE9BQU8sRUFBSSxVQUFTLFdBQVUsQ0FBRTtBQUNqRCxZQUFVLEtBQUssQUFBQyxDQUFDLEdBQUksTUFBSSxBQUFDLENBQUMsa0JBQWlCLENBQUMsQ0FBQyxDQUFDO0FBQ25ELENBQUM7QUFFRCxLQUFLLFFBQVEsRUFBSSxhQUFXLENBQUM7QUFBQSIsImZpbGUiOiJhY3Rpdml0aWVzL2NvbGxlY3Rpb25PcC5qcyIsInNvdXJjZVJvb3QiOiJsaWIvZXM2Iiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XHJcblxyXG5sZXQgd2Y0bm9kZSA9IHJlcXVpcmUoXCJ3b3JrZmxvdy00LW5vZGVcIik7XHJcbmxldCB1dGlsID0gcmVxdWlyZShcInV0aWxcIik7XHJcbmxldCBBY3Rpdml0eSA9IHdmNG5vZGUuYWN0aXZpdGllcy5BY3Rpdml0eTtcclxubGV0IENvbGxlY3Rpb24gPSByZXF1aXJlKFwibW9uZ29kYlwiKS5Db2xsZWN0aW9uO1xyXG5sZXQgQ29sbGVjdGlvbmlmeSA9IHJlcXVpcmUoXCIuL2NvbGxlY3Rpb25pZnlcIik7XHJcbmxldCBfID0gcmVxdWlyZShcImxvZGFzaFwiKTtcclxuXHJcbmZ1bmN0aW9uIENvbGxlY3Rpb25PcCgpIHtcclxuICAgIEFjdGl2aXR5LmNhbGwodGhpcyk7XHJcblxyXG4gICAgdGhpcy5jb2xsZWN0aW9uID0gbnVsbDtcclxuICAgIHRoaXMubm9uU2NvcGVkUHJvcGVydGllcy5hZGQoXCJkb1dvcmtcIik7XHJcbn1cclxuXHJcbnV0aWwuaW5oZXJpdHMoQ29sbGVjdGlvbk9wLCBBY3Rpdml0eSk7XHJcblxyXG5PYmplY3QuZGVmaW5lUHJvcGVydGllcyhDb2xsZWN0aW9uT3AucHJvdG90eXBlLCB7XHJcbiAgICBjb2xsZWN0aW9uaWZ5OiB7XHJcbiAgICAgICAgdmFsdWU6IGZhbHNlLFxyXG4gICAgICAgIGVudW1lcmFibGU6IGZhbHNlXHJcbiAgICB9XHJcbn0pO1xyXG5cclxuQ29sbGVjdGlvbk9wLnByb3RvdHlwZS5nZXRDb2xsZWN0aW9uID0gZnVuY3Rpb24obXVzdFNldCkge1xyXG4gICAgbXVzdFNldCA9IF8uaXNVbmRlZmluZWQobXVzdFNldCkgPyB0cnVlIDogISFtdXN0U2V0O1xyXG4gICAgbGV0IGNvbGxlY3Rpb24gPSB0aGlzLmNvbGxlY3Rpb247XHJcbiAgICBpZiAobXVzdFNldCAmJiAhKGNvbGxlY3Rpb24gaW5zdGFuY2VvZiBDb2xsZWN0aW9uKSkge1xyXG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgJyR7Y29sbGVjdGlvbn0gaXMgbm90IGEgQ29sbGVjdGlvbiBpbnN0YW5jZSdgKTtcclxuICAgIH1cclxuICAgIHJldHVybiBjb2xsZWN0aW9uO1xyXG59O1xyXG5cclxuQ29sbGVjdGlvbk9wLnByb3RvdHlwZS5pbml0aWFsaXplU3RydWN0dXJlID0gZnVuY3Rpb24oKSB7XHJcbiAgICBpZiAodGhpcy5jb2xsZWN0aW9uaWZ5KSB7XHJcbiAgICAgICAgbGV0IGNvbGwgPSB0aGlzLmNvbGxlY3Rpb247XHJcbiAgICAgICAgdGhpcy5jb2xsZWN0aW9uID0gbmV3IENvbGxlY3Rpb25pZnkoKTtcclxuICAgICAgICB0aGlzLmNvbGxlY3Rpb24uaW5wdXQgPSBjb2xsO1xyXG4gICAgfVxyXG59O1xyXG5cclxuQ29sbGVjdGlvbk9wLnByb3RvdHlwZS5ydW4gPSBmdW5jdGlvbihjYWxsQ29udGV4dCwgYXJncykge1xyXG4gICAgdGhpcy5fYXJncyA9IGFyZ3M7XHJcbiAgICBjYWxsQ29udGV4dC5zY2hlZHVsZSh0aGlzLmNvbGxlY3Rpb24sIFwiX2NvbGxlY3Rpb25Hb3RcIik7XHJcbn07XHJcblxyXG5Db2xsZWN0aW9uT3AucHJvdG90eXBlLl9jb2xsZWN0aW9uR290ID0gZnVuY3Rpb24oY2FsbENvbnRleHQsIHJlYXNvbiwgcmVzdWx0KSB7XHJcbiAgICBpZiAocmVhc29uICE9PSBBY3Rpdml0eS5zdGF0ZXMuY29tcGxldGUpIHtcclxuICAgICAgICBjYWxsQ29udGV4dC5lbmQocmVhc29uLCByZXN1bHQpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICB0aGlzLmNvbGxlY3Rpb24gPSByZXN1bHQ7XHJcbiAgICBjYWxsQ29udGV4dC5hY3Rpdml0eS5kb1dvcmsuY2FsbCh0aGlzLCBjYWxsQ29udGV4dCk7XHJcbn07XHJcblxyXG5Db2xsZWN0aW9uT3AucHJvdG90eXBlLmRvV29yayA9IGZ1bmN0aW9uKGNhbGxDb250ZXh0KXtcclxuICAgIGNhbGxDb250ZXh0LmZhaWwobmV3IEVycm9yKFwiTm90IGltcGxlbWVudGVkLlwiKSk7XHJcbn07XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IENvbGxlY3Rpb25PcDsiXX0=
