"use strict";
"use strict";
var util = require('util');
var Query = require('./query');
var MongoDBContext = require('./mongoDBContext');
function Find() {
  Query.call(this);
  this.toArray = false;
}
util.inherits(Find, Query);
Find.prototype.doQuery = function(callContext, query) {
  var coll = callContext.activity.getCollection(this);
  var cursor = coll.find(query || {}, this.get('options'));
  if (this.get("toArray")) {
    cursor.toArray(function(err, result) {
      if (err) {
        callContext.fail(err);
      } else {
        callContext.complete(result);
      }
      cursor.close();
    });
  } else {
    MongoDBContext.registerOpenedCursor(this, cursor);
    callContext.complete(cursor);
  }
};
module.exports = Find;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZpbmQuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQSxXQUFXLENBQUM7QUFFWixBQUFJLEVBQUEsQ0FBQSxJQUFHLEVBQUksQ0FBQSxPQUFNLEFBQUMsQ0FBQyxNQUFLLENBQUMsQ0FBQztBQUMxQixBQUFJLEVBQUEsQ0FBQSxLQUFJLEVBQUksQ0FBQSxPQUFNLEFBQUMsQ0FBQyxTQUFRLENBQUMsQ0FBQztBQUM5QixBQUFJLEVBQUEsQ0FBQSxjQUFhLEVBQUksQ0FBQSxPQUFNLEFBQUMsQ0FBQyxrQkFBaUIsQ0FBQyxDQUFDO0FBRWhELE9BQVMsS0FBRyxDQUFFLEFBQUQsQ0FBRztBQUNaLE1BQUksS0FBSyxBQUFDLENBQUMsSUFBRyxDQUFDLENBQUM7QUFFaEIsS0FBRyxRQUFRLEVBQUksTUFBSSxDQUFDO0FBQ3hCO0FBQUEsQUFFQSxHQUFHLFNBQVMsQUFBQyxDQUFDLElBQUcsQ0FBRyxNQUFJLENBQUMsQ0FBQztBQUUxQixHQUFHLFVBQVUsUUFBUSxFQUFJLFVBQVMsV0FBVSxDQUFHLENBQUEsS0FBSSxDQUFHO0FBQ2xELEFBQUksSUFBQSxDQUFBLElBQUcsRUFBSSxDQUFBLFdBQVUsU0FBUyxjQUFjLEFBQUMsQ0FBQyxJQUFHLENBQUMsQ0FBQztBQUNuRCxBQUFJLElBQUEsQ0FBQSxNQUFLLEVBQUksQ0FBQSxJQUFHLEtBQUssQUFBQyxDQUFDLEtBQUksR0FBSyxHQUFDLENBQUcsQ0FBQSxJQUFHLElBQUksQUFBQyxDQUFDLFNBQVEsQ0FBQyxDQUFDLENBQUM7QUFDeEQsS0FBSSxJQUFHLElBQUksQUFBQyxDQUFDLFNBQVEsQ0FBQyxDQUFHO0FBQ3JCLFNBQUssUUFBUSxBQUFDLENBQUMsU0FBUyxHQUFFLENBQUcsQ0FBQSxNQUFLLENBQUc7QUFDakMsU0FBSSxHQUFFLENBQUc7QUFDTCxrQkFBVSxLQUFLLEFBQUMsQ0FBQyxHQUFFLENBQUMsQ0FBQztNQUN6QixLQUNLO0FBQ0Qsa0JBQVUsU0FBUyxBQUFDLENBQUMsTUFBSyxDQUFDLENBQUM7TUFDaEM7QUFBQSxBQUNBLFdBQUssTUFBTSxBQUFDLEVBQUMsQ0FBQztJQUNsQixDQUFDLENBQUM7RUFDTixLQUNLO0FBQ0QsaUJBQWEscUJBQXFCLEFBQUMsQ0FBQyxJQUFHLENBQUcsT0FBSyxDQUFDLENBQUM7QUFDakQsY0FBVSxTQUFTLEFBQUMsQ0FBQyxNQUFLLENBQUMsQ0FBQztFQUNoQztBQUFBLEFBQ0osQ0FBQTtBQUVBLEtBQUssUUFBUSxFQUFJLEtBQUcsQ0FBQztBQUFBIiwiZmlsZSI6ImFjdGl2aXRpZXMvZmluZC5qcyIsInNvdXJjZVJvb3QiOiJsaWIvZXM2Iiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XHJcblxyXG5sZXQgdXRpbCA9IHJlcXVpcmUoJ3V0aWwnKTtcclxubGV0IFF1ZXJ5ID0gcmVxdWlyZSgnLi9xdWVyeScpO1xyXG5sZXQgTW9uZ29EQkNvbnRleHQgPSByZXF1aXJlKCcuL21vbmdvREJDb250ZXh0Jyk7XHJcblxyXG5mdW5jdGlvbiBGaW5kKCkge1xyXG4gICAgUXVlcnkuY2FsbCh0aGlzKTtcclxuXHJcbiAgICB0aGlzLnRvQXJyYXkgPSBmYWxzZTtcclxufVxyXG5cclxudXRpbC5pbmhlcml0cyhGaW5kLCBRdWVyeSk7XHJcblxyXG5GaW5kLnByb3RvdHlwZS5kb1F1ZXJ5ID0gZnVuY3Rpb24oY2FsbENvbnRleHQsIHF1ZXJ5KSB7XHJcbiAgICBsZXQgY29sbCA9IGNhbGxDb250ZXh0LmFjdGl2aXR5LmdldENvbGxlY3Rpb24odGhpcyk7XHJcbiAgICBsZXQgY3Vyc29yID0gY29sbC5maW5kKHF1ZXJ5IHx8IHt9LCB0aGlzLmdldCgnb3B0aW9ucycpKTtcclxuICAgIGlmICh0aGlzLmdldChcInRvQXJyYXlcIikpIHtcclxuICAgICAgICBjdXJzb3IudG9BcnJheShmdW5jdGlvbihlcnIsIHJlc3VsdCkge1xyXG4gICAgICAgICAgICBpZiAoZXJyKSB7XHJcbiAgICAgICAgICAgICAgICBjYWxsQ29udGV4dC5mYWlsKGVycik7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBjYWxsQ29udGV4dC5jb21wbGV0ZShyZXN1bHQpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGN1cnNvci5jbG9zZSgpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG4gICAgZWxzZSB7XHJcbiAgICAgICAgTW9uZ29EQkNvbnRleHQucmVnaXN0ZXJPcGVuZWRDdXJzb3IodGhpcywgY3Vyc29yKTtcclxuICAgICAgICBjYWxsQ29udGV4dC5jb21wbGV0ZShjdXJzb3IpO1xyXG4gICAgfVxyXG59XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IEZpbmQ7Il19
