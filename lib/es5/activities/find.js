"use strict";
var util = require("util");
var Query = require("./query");
var UnitOfWork = require("./unitOfWork");
var debug = require("debug")("mongo-crunch:Find");
function Find() {
  Query.call(this);
  this.toArray = false;
}
util.inherits(Find, Query);
Find.prototype.doQuery = function(callContext, query, options) {
  var coll = this.getCollection.call(this);
  query = query || {};
  debug(("Creating cursor for query:\n" + util.inspect(query) + "\noptions:\n" + util.inspect(options)));
  var cursor = coll.find(query, options);
  if (this.toArray) {
    debug("Converting cursor to array.");
    cursor.toArray(function(err, result) {
      if (err) {
        callContext.fail(err);
      } else {
        debug(("Result documents count: " + result.length));
        callContext.complete(result);
      }
      cursor.close();
    });
  } else {
    debug("Registering cursor in context.");
    UnitOfWork.registerOpenedCursor(this, cursor);
    callContext.complete(cursor);
  }
};
module.exports = Find;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZpbmQuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFFQSxBQUFJLEVBQUEsQ0FBQSxJQUFHLEVBQUksQ0FBQSxPQUFNLEFBQUMsQ0FBQyxNQUFLLENBQUMsQ0FBQztBQUMxQixBQUFJLEVBQUEsQ0FBQSxLQUFJLEVBQUksQ0FBQSxPQUFNLEFBQUMsQ0FBQyxTQUFRLENBQUMsQ0FBQztBQUM5QixBQUFJLEVBQUEsQ0FBQSxVQUFTLEVBQUksQ0FBQSxPQUFNLEFBQUMsQ0FBQyxjQUFhLENBQUMsQ0FBQztBQUN4QyxBQUFJLEVBQUEsQ0FBQSxLQUFJLEVBQUksQ0FBQSxPQUFNLEFBQUMsQ0FBQyxPQUFNLENBQUMsQUFBQyxDQUFDLG1CQUFrQixDQUFDLENBQUM7QUFFakQsT0FBUyxLQUFHLENBQUUsQUFBRCxDQUFHO0FBQ1osTUFBSSxLQUFLLEFBQUMsQ0FBQyxJQUFHLENBQUMsQ0FBQztBQUVoQixLQUFHLFFBQVEsRUFBSSxNQUFJLENBQUM7QUFDeEI7QUFBQSxBQUVBLEdBQUcsU0FBUyxBQUFDLENBQUMsSUFBRyxDQUFHLE1BQUksQ0FBQyxDQUFDO0FBRTFCLEdBQUcsVUFBVSxRQUFRLEVBQUksVUFBUyxXQUFVLENBQUcsQ0FBQSxLQUFJLENBQUcsQ0FBQSxPQUFNLENBQUc7QUFDM0QsQUFBSSxJQUFBLENBQUEsSUFBRyxFQUFJLENBQUEsSUFBRyxjQUFjLEtBQUssQUFBQyxDQUFDLElBQUcsQ0FBQyxDQUFDO0FBQ3hDLE1BQUksRUFBSSxDQUFBLEtBQUksR0FBSyxHQUFDLENBQUM7QUFDbkIsTUFBSSxBQUFDLEVBQUMsOEJBQThCLEVBQUMsQ0FBQSxJQUFHLFFBQVEsQUFBQyxDQUFDLEtBQUksQ0FBQyxDQUFBLENBQUMsZUFBYyxFQUFDLENBQUEsSUFBRyxRQUFRLEFBQUMsQ0FBQyxPQUFNLENBQUMsRUFBRyxDQUFDO0FBQy9GLEFBQUksSUFBQSxDQUFBLE1BQUssRUFBSSxDQUFBLElBQUcsS0FBSyxBQUFDLENBQUMsS0FBSSxDQUFHLFFBQU0sQ0FBQyxDQUFDO0FBQ3RDLEtBQUksSUFBRyxRQUFRLENBQUc7QUFDZCxRQUFJLEFBQUMsQ0FBQyw2QkFBNEIsQ0FBQyxDQUFDO0FBQ3BDLFNBQUssUUFBUSxBQUFDLENBQUMsU0FBUyxHQUFFLENBQUcsQ0FBQSxNQUFLLENBQUc7QUFDakMsU0FBSSxHQUFFLENBQUc7QUFDTCxrQkFBVSxLQUFLLEFBQUMsQ0FBQyxHQUFFLENBQUMsQ0FBQztNQUN6QixLQUNLO0FBQ0QsWUFBSSxBQUFDLEVBQUMsMEJBQTBCLEVBQUMsQ0FBQSxNQUFLLE9BQU8sRUFBRyxDQUFDO0FBQ2pELGtCQUFVLFNBQVMsQUFBQyxDQUFDLE1BQUssQ0FBQyxDQUFDO01BQ2hDO0FBQUEsQUFDQSxXQUFLLE1BQU0sQUFBQyxFQUFDLENBQUM7SUFDbEIsQ0FBQyxDQUFDO0VBQ04sS0FDSztBQUNELFFBQUksQUFBQyxDQUFDLGdDQUErQixDQUFDLENBQUM7QUFDdkMsYUFBUyxxQkFBcUIsQUFBQyxDQUFDLElBQUcsQ0FBRyxPQUFLLENBQUMsQ0FBQztBQUM3QyxjQUFVLFNBQVMsQUFBQyxDQUFDLE1BQUssQ0FBQyxDQUFDO0VBQ2hDO0FBQUEsQUFDSixDQUFDO0FBRUQsS0FBSyxRQUFRLEVBQUksS0FBRyxDQUFDO0FBQUEiLCJmaWxlIjoiYWN0aXZpdGllcy9maW5kLmpzIiwic291cmNlUm9vdCI6ImxpYi9lczYiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcclxuXHJcbmxldCB1dGlsID0gcmVxdWlyZShcInV0aWxcIik7XHJcbmxldCBRdWVyeSA9IHJlcXVpcmUoXCIuL3F1ZXJ5XCIpO1xyXG5sZXQgVW5pdE9mV29yayA9IHJlcXVpcmUoXCIuL3VuaXRPZldvcmtcIik7XHJcbmxldCBkZWJ1ZyA9IHJlcXVpcmUoXCJkZWJ1Z1wiKShcIm1vbmdvLWNydW5jaDpGaW5kXCIpO1xyXG5cclxuZnVuY3Rpb24gRmluZCgpIHtcclxuICAgIFF1ZXJ5LmNhbGwodGhpcyk7XHJcblxyXG4gICAgdGhpcy50b0FycmF5ID0gZmFsc2U7XHJcbn1cclxuXHJcbnV0aWwuaW5oZXJpdHMoRmluZCwgUXVlcnkpO1xyXG5cclxuRmluZC5wcm90b3R5cGUuZG9RdWVyeSA9IGZ1bmN0aW9uKGNhbGxDb250ZXh0LCBxdWVyeSwgb3B0aW9ucykge1xyXG4gICAgbGV0IGNvbGwgPSB0aGlzLmdldENvbGxlY3Rpb24uY2FsbCh0aGlzKTtcclxuICAgIHF1ZXJ5ID0gcXVlcnkgfHwge307XHJcbiAgICBkZWJ1ZyhgQ3JlYXRpbmcgY3Vyc29yIGZvciBxdWVyeTpcXG4ke3V0aWwuaW5zcGVjdChxdWVyeSl9XFxub3B0aW9uczpcXG4ke3V0aWwuaW5zcGVjdChvcHRpb25zKX1gKTtcclxuICAgIGxldCBjdXJzb3IgPSBjb2xsLmZpbmQocXVlcnksIG9wdGlvbnMpO1xyXG4gICAgaWYgKHRoaXMudG9BcnJheSkge1xyXG4gICAgICAgIGRlYnVnKGBDb252ZXJ0aW5nIGN1cnNvciB0byBhcnJheS5gKTtcclxuICAgICAgICBjdXJzb3IudG9BcnJheShmdW5jdGlvbihlcnIsIHJlc3VsdCkge1xyXG4gICAgICAgICAgICBpZiAoZXJyKSB7XHJcbiAgICAgICAgICAgICAgICBjYWxsQ29udGV4dC5mYWlsKGVycik7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBkZWJ1ZyhgUmVzdWx0IGRvY3VtZW50cyBjb3VudDogJHtyZXN1bHQubGVuZ3RofWApO1xyXG4gICAgICAgICAgICAgICAgY2FsbENvbnRleHQuY29tcGxldGUocmVzdWx0KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBjdXJzb3IuY2xvc2UoKTtcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuICAgIGVsc2Uge1xyXG4gICAgICAgIGRlYnVnKGBSZWdpc3RlcmluZyBjdXJzb3IgaW4gY29udGV4dC5gKTtcclxuICAgICAgICBVbml0T2ZXb3JrLnJlZ2lzdGVyT3BlbmVkQ3Vyc29yKHRoaXMsIGN1cnNvcik7XHJcbiAgICAgICAgY2FsbENvbnRleHQuY29tcGxldGUoY3Vyc29yKTtcclxuICAgIH1cclxufTtcclxuXHJcbm1vZHVsZS5leHBvcnRzID0gRmluZDsiXX0=
