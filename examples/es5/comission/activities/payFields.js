"use strict";
"use strict";
var util = require("util");
var wf4node = require("workflow-4-node");
var Activity = wf4node.activities.Activity;
var path = require("path");
var _ = require("lodash");
function PayFields() {
  Activity.call(this);
}
util.inherits(PayFields, Activity);
PayFields.prototype.run = function(callContext, args) {
  callContext.schedule(args, "_argsGot");
};
PayFields.prototype._argsGot = function(callContext, reason, result) {
  if (reason !== Activity.states.complete) {
    callContext.end(reason, result);
    return;
  }
  var arr = [];
  var $__17 = true;
  var $__18 = false;
  var $__19 = undefined;
  try {
    for (var $__15 = void 0,
        $__14 = (result)[$traceurRuntime.toProperty(Symbol.iterator)](); !($__17 = ($__15 = $__14.next()).done); $__17 = true) {
      var arg = $__15.value;
      {
        var $__10 = true;
        var $__11 = false;
        var $__12 = undefined;
        try {
          for (var $__8 = void 0,
              $__7 = ((_.isArray(arg) ? arg : [arg]))[$traceurRuntime.toProperty(Symbol.iterator)](); !($__10 = ($__8 = $__7.next()).done); $__10 = true) {
            var stripe = $__8.value;
            {
              if (_.isArray(stripe.payFields)) {
                var $__3 = true;
                var $__4 = false;
                var $__5 = undefined;
                try {
                  for (var $__1 = void 0,
                      $__0 = (stripe.payFields)[$traceurRuntime.toProperty(Symbol.iterator)](); !($__3 = ($__1 = $__0.next()).done); $__3 = true) {
                    var field = $__1.value;
                    {
                      arr.push(field);
                    }
                  }
                } catch ($__6) {
                  $__4 = true;
                  $__5 = $__6;
                } finally {
                  try {
                    if (!$__3 && $__0.return != null) {
                      $__0.return();
                    }
                  } finally {
                    if ($__4) {
                      throw $__5;
                    }
                  }
                }
              } else if (_.isString(stripe.payFields)) {
                arr.push(stripe.payFields);
              }
            }
          }
        } catch ($__13) {
          $__11 = true;
          $__12 = $__13;
        } finally {
          try {
            if (!$__10 && $__7.return != null) {
              $__7.return();
            }
          } finally {
            if ($__11) {
              throw $__12;
            }
          }
        }
      }
    }
  } catch ($__20) {
    $__18 = true;
    $__19 = $__20;
  } finally {
    try {
      if (!$__17 && $__14.return != null) {
        $__14.return();
      }
    } finally {
      if ($__18) {
        throw $__19;
      }
    }
  }
  arr = _.uniq(arr);
  var obj = {};
  var $__24 = true;
  var $__25 = false;
  var $__26 = undefined;
  try {
    for (var $__22 = void 0,
        $__21 = (arr)[$traceurRuntime.toProperty(Symbol.iterator)](); !($__24 = ($__22 = $__21.next()).done); $__24 = true) {
      var f = $__22.value;
      {
        obj[f] = "$" + f;
      }
    }
  } catch ($__27) {
    $__25 = true;
    $__26 = $__27;
  } finally {
    try {
      if (!$__24 && $__21.return != null) {
        $__21.return();
      }
    } finally {
      if ($__25) {
        throw $__26;
      }
    }
  }
  callContext.complete(obj);
};
module.exports = PayFields;
//# sourceMappingURL=data:application/json;base64,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QWlCLEdBQUssQ0FBQSxZQUF1QixHQUFLLEtBQUcsQ0FBRztBQUMxRCxtQkFBd0IsQUFBQyxFQUFDLENBQUM7TUFDN0I7QUFBQSxJQUNGLENBQUUsT0FBUTtBQUNSLGVBQXdCO0FBQ3RCLG1CQUF3QjtNQUMxQjtBQUFBLElBQ0Y7QUFBQSxFQUNGO0FBQUEsQUF1QkosWUFBVSxTQUFTLEFBQUMsQ0FBQyxHQUFFLENBQUMsQ0FBQztBQUM3QixDQUFDO0FBRUQsS0FBSyxRQUFRLEVBQUksVUFBUSxDQUFDO0FBQUEiLCJmaWxlIjoiY29taXNzaW9uL2FjdGl2aXRpZXMvcGF5RmllbGRzLmpzIiwic291cmNlUm9vdCI6ImV4YW1wbGVzL2VzNiIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xyXG5cclxubGV0IHV0aWwgPSByZXF1aXJlKFwidXRpbFwiKTtcclxubGV0IHdmNG5vZGUgPSByZXF1aXJlKFwid29ya2Zsb3ctNC1ub2RlXCIpO1xyXG5sZXQgQWN0aXZpdHkgPSB3ZjRub2RlLmFjdGl2aXRpZXMuQWN0aXZpdHk7XHJcbmxldCBwYXRoID0gcmVxdWlyZShcInBhdGhcIik7XHJcbmxldCBfID0gcmVxdWlyZShcImxvZGFzaFwiKTtcclxuXHJcbmZ1bmN0aW9uIFBheUZpZWxkcygpIHtcclxuICAgIEFjdGl2aXR5LmNhbGwodGhpcyk7XHJcbn1cclxuXHJcbnV0aWwuaW5oZXJpdHMoUGF5RmllbGRzLCBBY3Rpdml0eSk7XHJcblxyXG5QYXlGaWVsZHMucHJvdG90eXBlLnJ1biA9IGZ1bmN0aW9uIChjYWxsQ29udGV4dCwgYXJncykge1xyXG4gICAgY2FsbENvbnRleHQuc2NoZWR1bGUoYXJncywgXCJfYXJnc0dvdFwiKTtcclxufTtcclxuXHJcblBheUZpZWxkcy5wcm90b3R5cGUuX2FyZ3NHb3QgPSBmdW5jdGlvbiAoY2FsbENvbnRleHQsIHJlYXNvbiwgcmVzdWx0KSB7XHJcbiAgICBpZiAocmVhc29uICE9PSBBY3Rpdml0eS5zdGF0ZXMuY29tcGxldGUpIHtcclxuICAgICAgICBjYWxsQ29udGV4dC5lbmQocmVhc29uLCByZXN1bHQpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBsZXQgYXJyID0gW107XHJcbiAgICBmb3IgKGxldCBhcmcgb2YgcmVzdWx0KSB7XHJcbiAgICAgICAgZm9yIChsZXQgc3RyaXBlIG9mIChfLmlzQXJyYXkoYXJnKSA/IGFyZyA6IFthcmddKSkge1xyXG4gICAgICAgICAgICBpZiAoXy5pc0FycmF5KHN0cmlwZS5wYXlGaWVsZHMpKSB7XHJcbiAgICAgICAgICAgICAgICBmb3IgKGxldCBmaWVsZCBvZiBzdHJpcGUucGF5RmllbGRzKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgYXJyLnB1c2goZmllbGQpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2UgaWYgKF8uaXNTdHJpbmcoc3RyaXBlLnBheUZpZWxkcykpIHtcclxuICAgICAgICAgICAgICAgIGFyci5wdXNoKHN0cmlwZS5wYXlGaWVsZHMpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgYXJyID0gXy51bmlxKGFycik7XHJcbiAgICBsZXQgb2JqID0ge307XHJcbiAgICBmb3IgKGxldCBmIG9mIGFycikge1xyXG4gICAgICAgIG9ialtmXSA9IFwiJFwiICsgZjtcclxuICAgIH1cclxuICAgIGNhbGxDb250ZXh0LmNvbXBsZXRlKG9iaik7XHJcbn07XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IFBheUZpZWxkczsiXX0=
